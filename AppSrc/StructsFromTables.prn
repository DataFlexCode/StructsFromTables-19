Compiling Program: C:\Projects\StructsFromTables-19\AppSrc\StructsFromTables.src
Memory Available: 2147483646
1>//==============================================================================
1>//
1>// StructsFromTables.src: This is a little program which generates structs from
1>//                        database tables.  For more information see the file
1>//                        ReadMe.txt which should have accompanied this source.
1>//
1>// Mike Peat, Unicorn, 7th September 2006
1>//
1>//==============================================================================
1>
1>//==============================================================================
1>//
1>// Copyright (c) 2006 Mike Peat
1>//
1>// Permission is hereby granted, free of charge, to any person obtaining a copy
1>// of this software and associated documentation files (the "Software"), to deal
1>// in the Software without restriction, including without limitation the rights
1>// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
1>// copies of the Software, and to permit persons to whom the Software is
1>// furnished to do so, subject to the following conditions:
1>//
1>// The above copyright notice and this permission notice shall be included in
1>// all copies or substantial portions of the Software.
1>//
1>// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
1>// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
1>// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
1>// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
1>// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
1>// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
1>// SOFTWARE.
1>//
1>//==============================================================================
1>Use DfAllEnt.pkg
Using pre-compiled package DFALLENT.PKG
Including file: dfallent.pkd    (C:\Program Files (x86)\DataFlex 19.1\Pkg\dfallent.pkd)
67438>Use cApplication.pkg
67438>
67438>Object oApplication is a cApplication
67440>End_Object
67441>
67441>Use StructFromTable.dg
Including file: StructFromTable.dg    (C:\Projects\StructsFromTables-19\AppSrc\StructFromTable.dg)
67441>>>//==============================================================================
67441>>>//
67441>>>// StructFromTable.dg: The main working guts of the StructsFromTables program.
67441>>>//
67441>>>// Mike Peat, Unicorn, 7th September 2006
67441>>>//
67441>>>//   NOTE: In order to manipulate this dialog in the Studio (VDF 11 as I write
67441>>>//         but VDF 12 is in Beta and I have not tested this with that yet) you
67441>>>//         will need to change the class of the oStructFromTab object below from
67441>>>//         BasicDialog to ModalDialog.  Once you do that you can play with in
67441>>>//         the VDF Studio, but to get its proper behaviour back, change it back
67441>>>//         to BasicPanel, save and recompile before release.
67441>>>//
67441>>>//   UPDATE: Now in glorious DataFlex 19.0 - 1st November 2017, so the above is
67441>>>//           obsolete.  Seems to work OK!  ;-)
67441>>>//
67441>>>//==============================================================================
67441>>>
67441>>>//==============================================================================
67441>>>//
67441>>>// Copyright (c) 2006, 2017 (updated to DF v19.0) Mike Peat
67441>>>//
67441>>>// Permission is hereby granted, free of charge, to any person obtaining a copy
67441>>>// of this software and associated documentation files (the "Software"), to deal
67441>>>// in the Software without restriction, including without limitation the rights
67441>>>// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
67441>>>// copies of the Software, and to permit persons to whom the Software is
67441>>>// furnished to do so, subject to the following conditions:
67441>>>//
67441>>>// The above copyright notice and this permission notice shall be included in
67441>>>// all copies or substantial portions of the Software.
67441>>>//
67441>>>// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
67441>>>// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
67441>>>// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
67441>>>// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
67441>>>// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
67441>>>// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
67441>>>// SOFTWARE.
67441>>>//
67441>>>//==============================================================================
67441>>>
67441>>>Use Windows.pkg
67441>>>Use File_dlg.Pkg
67441>>>Use SEQ_Chnl.pkg  // Be polite about channels
67441>>>
67441>>>Object oStructFromTab is a ModalPanel
67443>>>    Set Location to 1 2
67444>>>    
67444>>>    Property String   psSourceFile Public "TableStructs.pkg"
WARNING: 4535 Use of Private or Public keyword in property command is obsolete ON LINE: 50 (67444) OF FILE: C:\Projects\StructsFromTables-19\AppSrc\StructFromTable.dg
67446>>>    Property Boolean  pbFileOpened Public False
WARNING: 4535 Use of Private or Public keyword in property command is obsolete ON LINE: 51 (67446) OF FILE: C:\Projects\StructsFromTables-19\AppSrc\StructFromTable.dg
67448>>>    Property Integer  piChannel    Public 0
WARNING: 4535 Use of Private or Public keyword in property command is obsolete ON LINE: 52 (67448) OF FILE: C:\Projects\StructsFromTables-19\AppSrc\StructFromTable.dg
67450>>>    Property String[] pasExisting  Public
WARNING: 4535 Use of Private or Public keyword in property command is obsolete ON LINE: 53 (67450) OF FILE: C:\Projects\StructsFromTables-19\AppSrc\StructFromTable.dg
67452>>>    Property String   psBaseName   Public "Generate Structs From Tables"
WARNING: 4535 Use of Private or Public keyword in property command is obsolete ON LINE: 54 (67452) OF FILE: C:\Projects\StructsFromTables-19\AppSrc\StructFromTable.dg
67454>>>    
67454>>>    On_Key Key_Alt+Key_S Send SelectAll
67455>>>    On_Key Key_Alt+Key_D Send DeselectAll
67456>>>    On_Key Key_Alt+Key_G Send GenerateStructs
67457>>>    On_Key Key_Alt+Key_C Send Cancel
67458>>>    On_Key kCancel       Send Cancel
67459>>>    
67459>>>    Function ProperCase String sText Returns String
67462>>>        Function_Return (Overstrike(Uppercase(Left(sText, 1)), LowerCase(sText), 1))
67463>>>    End_Function
67464>>>    
67464>>>    Function WsFromSws String sSws Returns String
67467>>>        Handle hoIni
67467>>>        String sWs sRetVal
67467>>>        
67467>>>        Get Create (RefClass(cIniFile)) to hoIni
67468>>>        Set psFilename        of hoIni  to sSws
67469>>>        Get ReadString        of hoIni "WorkspacePaths" "ConfigFile" "" to sWs
67470>>>        Send Destroy          of hoIni
67471>>>        Move (Replace(".\", sWs, ExtractFilePath(sSws))) to sRetVal
67472>>>        
67472>>>        Function_Return sRetVal
67473>>>    End_Function
67474>>>    
67474>>>    Procedure ChangeWorkspace
67477>>>        Boolean bOpen
67477>>>        String  sFile sFL sName sWS sWsFile
67477>>>        Handle  hoWS hoIni
67477>>>    
67477>>>        Set Dialog_Caption of oOpenDlg to "Locate a Workspace to use"
67478>>>        Set FileMustExist_State of oOpenDlg to True
67479>>>        Set Filter_String of oOpenDlg to ;            "Workspace (*.ws)|*.ws|Studio Workspace (*.sws)|*.sws|All Files (*.*)|*.*"
67480>>>        Set Filter_Index of oOpenDlg to 1
67481>>>
67481>>>        Get Show_Dialog of oOpenDlg to bOpen
67482>>>    
67482>>>        If bOpen Begin
67484>>>            Get File_Name of oOpenDlg to sFile
67485>>>            
67485>>>            If (Uppercase(Right(sFile, 4)) = ".SWS") Begin  // Studio workspace - find actual workspace file
67487>>>                Get WsFromSws sFile to sFile
67488>>>            End
67488>>>>
67488>>>            
67488>>>            Get phoWorkspace     of (oApplication(Desktop)) to hoWS
67489>>>            Send DoClearPaths    to hoWS
67490>>>            Send DoOpenWorkspace of (oApplication(Desktop))    sFile
67491>>>            Get psFilelist       of hoWS                    to sFL
67492>>>            Get psWorkspaceName  of hoWS                    to sName
67493>>>            Set Label to (psBaseName(Self) * "-" * sName)
67494>>>            Set_Attribute DF_FILELIST_NAME to sFL
67497>>>            Send ListTables
67498>>>        End
67498>>>>
67498>>>        
67498>>>    End_Procedure
67499>>>
67499>>>    Procedure ChangeFilelist
67502>>>        Boolean bOpen
67502>>>        String  sFile
67502>>>    
67502>>>        Set Dialog_Caption of oOpenDlg to "Locate a Filelist to use"
67503>>>        Set FileMustExist_State of oOpenDlg to True
67504>>>        Set Filter_String of oOpenDlg to ;            "Config (*.cfg)|*.cfg|All Files (*.*)|*.*"
67505>>>        Set Filter_Index of oOpenDlg to 1
67506>>>        Get Show_Dialog of oOpenDlg to bOpen
67507>>>    
67507>>>        If bOpen Begin
67509>>>            Get File_Name of oOpenDlg to sFile
67510>>>            Set_Attribute DF_FILELIST_NAME to sFile
67513>>>            Send ListTables
67514>>>        End
67514>>>>
67514>>>        
67514>>>    End_Procedure
67515>>>    
67515>>>    Procedure ChangeGenFile
67518>>>        Boolean bOpen bDone
67518>>>        String  sFile sPath sName
67518>>>        Integer iLen i
67518>>>    
67518>>>        Get Value to sFile
67519>>>    
67519>>>        If (sFile contains"\") Begin
67521>>>            Move (Length(sFile)) to iLen
67522>>>            Move (False)         to bDone
67523>>>    
67523>>>            For i from 0 to (iLen - 1)
67529>>>>
67529>>>    
67529>>>                If (Mid(sFile, 1, (iLen - i)) = "\") Begin
67531>>>                    Move (Left(sFile, (iLen - i - 1))) to sPath
67532>>>                    Move (Right(sFile, (i - 1)))       to sName
67533>>>                    Set Initial_Folder of oOpenDlg     to sPath
67534>>>                    Set File_Title     of oOpenDlg     to sName
67535>>>                    Move (True) to bDone
67536>>>                End
67536>>>>
67536>>>    
67536>>>                If bDone Break
67539>>>            Loop
67540>>>>
67540>>>    
67540>>>        End
67540>>>>
67540>>>
67540>>>        Set Dialog_Caption of oOpenDlg to "Select a file to use for the generated code"
67541>>>        Set FileMustExist_State of oOpenDlg to False
67542>>>        Set Filter_String of oOpenDlg to ;            "Packages (*.pkg)|*.pkg|Source (*.src)|*.src|Include Files (*.inc)|*.inc|All Source (*.src;*.pkg;*.inc)|*.src;*.pkg;*.inc|All Files (*.*)|*.*"
67543>>>    
67543>>>        Get Show_Dialog of oOpenDlg to bOpen
67544>>>    
67544>>>        If bOpen Begin
67546>>>            Get File_Name of oOpenDlg to sFile
67547>>>            Set Value     of oGenFile to sFile
67548>>>            Send ListTables
67549>>>        End
67549>>>>
67549>>>        
67549>>>    End_Procedure      
67550>>>
67550>>>    Procedure FindExisting
67553>>>        Integer  iChn
67553>>>        String   sLine sPath
67553>>>        String[] asExisting
67554>>>    
67554>>>        Get Seq_New_Channel to iChn
67555>>>    
67555>>>        Get Value of oGenFile to sPath
67556>>>        Direct_Input channel iChn sPath
67558>>>    
67558>>>        While not (SeqEof)
67562>>>            Readln sLine
67563>>>            If (Left(sLine, 16) = "Declare_Datafile") ;                Move (Trim(Replace("Declare_Datafile ", sLine, ""))) to ;                asExisting[(SizeOfArray(asExisting))]
67566>>>        Loop
67567>>>>
67567>>>    
67567>>>        Set pasExisting to asExisting
67568>>>    
67568>>>        Close_Output channel iChn
67570>>>        Send SEQ_Release_Channel iChn
67571>>>    End_Procedure
67572>>>    
67572>>>    Function TableInFile String sTable Returns Boolean
67575>>>        String[] asExisting
67576>>>        Integer  i
67576>>>    
67576>>>        Get pasExisting to asExisting
67577>>>    
67577>>>        For i from 0 to (SizeOfArray(asExisting) - 1)
67583>>>>
67583>>>            If (sTable = asExisting[i]) Function_Return True
67586>>>        Loop
67587>>>>
67587>>>    
67587>>>        Function_Return False
67588>>>    End_Function
67589>>>    
67589>>>    Procedure ListTables
67592>>>        String  sDesc sTable sFile sFL
67592>>>        Handle  htFile hoWS
67592>>>        Boolean bExists
67592>>>    
67592>>>        // Clear grid
67592>>>        Send Delete_Data of oTables
67593>>>    
67593>>>        // See what's already in the file
67593>>>        Send FindExisting
67594>>>    
67594>>>        // Run through FileList
67594>>>        Move 0 to htFile
67595>>>        Send Ignore_Error of Error_Object_Id 75
67596>>>    
67596>>>        Repeat
67596>>>>
67596>>>            Get_Attribute DF_FILE_NEXT_USED of htFile to htFile
67599>>>    
67599>>>            If (htFile > 0) Begin
67601>>>                Indicate Err False
WARNING: 4538 Obsolete command: Indicate. Use Move command ON LINE: 226 (67601) OF FILE: C:\Projects\StructsFromTables-19\AppSrc\StructFromTable.dg
67602>>>                Open htFile
67604>>>                If (Err) Break
67607>>>                Get_Attribute DF_FILE_DISPLAY_NAME  of htFile to sDesc
67610>>>                Get_Attribute DF_FILE_LOGICAL_NAME  of htFile to sTable
67613>>>                Get_Attribute DF_FILE_ROOT_NAME     of htFile to sFile
67616>>>                Close htFile
67617>>>    
67617>>>                Get TableInFile sTable to bExists
67618>>>    
67618>>>                Send AddTableRow of oTables bExists htFile sDesc sTable sFile
67619>>>            End
67619>>>>
67619>>>    
67619>>>        Until (htFile = 0)
67621>>>    
67621>>>        Send Trap_Error of Error_Object_Id 75
67622>>>    End_Procedure
67623>>>    
67623>>>    Function OpenOutputFile Returns Boolean
67626>>>        String  sPath
67626>>>        Integer iChn iHr iMn iSec
67626>>>        Date    dToday
67626>>>    
67626>>>        If (pbFileOpened(Self)) Function_Return True
67629>>>    
67629>>>        Get Seq_New_Channel to iChn
67630>>>    
67630>>>        Get Value of oGenFile to sPath
67631>>>    
67631>>>        Direct_Output channel iChn sPath
67633>>>    
67633>>>        If (Err) Function_Return False
67636>>>    
67636>>>        Set pbFileOpened to True
67637>>>        Set piChannel    to iChn
67638>>>    
67638>>>        SysDate4 dToday iHr iMn iSec
WARNING: 4533 Obsolete command: Sysdate4. Use CurrentDateTime() function ON LINE: 262 (67638) OF FILE: C:\Projects\StructsFromTables-19\AppSrc\StructFromTable.dg
67642>>>    
67642>>>        Writeln "//=============================================================================="
67644>>>        Writeln "//"
67646>>>        Writeln "// " (psSourceFile(Self)) " - Structs and methods for selected tables."
67650>>>        Writeln "//"
67652>>>        Writeln "// Generated by " (Module_Name(Self)) ": " dToday " " ;                (Right("0" + String(iHr),  2) + ":" + ;                 Right("0" + String(iMn),  2) + ":" + ;                 Right("0" + String(iSec), 2))
67659>>>        Writeln "//"
67661>>>        Writeln "// For each table included in this file several things are provided:"
67663>>>        Writeln "//"
67665>>>        Writeln "//    1. A STRUCT having the same layout as the table: 't<TableName>'."
67667>>>        Writeln "//    2. A FUNCTION to move data from the file buffer to a struct variable and"
67669>>>        Writeln "//       return that variable: '<TableName>_BufferToStruct'."
67671>>>        Writeln "//    3. A PROCEDURE which takes a struct variable and moves its data to the"
67673>>>        Writeln "//       file buffer: '<TableName>_StructToBuffer'."
67675>>>        Writeln "//    4. A FUNCTION which loads a struct variable from the Current_Field_Value"
67677>>>        Writeln "//       properties of a passed Data Dictionary handle and returns it:"
67679>>>        Writeln "//       '<TableName>_DDToStruct'."
67681>>>        Writeln "//    5. A PROCEDURE which takes a struct variable and a Data Dictionary handle"
67683>>>        Writeln "//       and sets the DD Field_Changed_Value properties from the struct data:"
67685>>>        Writeln "//       '<Table_Name>_StructToDD'."
67687>>>        Writeln "//"
67689>>>        Writeln "// NOTES: 1. The Procedures and Functions are GLOBAL."
67691>>>        Writeln "//        2. The mechanism skips Overlap and Binary fields - sorry!"
67693>>>        Writeln "//"
67695>>>        Writeln "// This file is generated by running the program " (Module_Name(Self)) "."
67699>>>        Writeln "// It should NEVER be manually edited."
67701>>>        Writeln "//"
67703>>>        Writeln "// The program should be run to regenerate the file if any changes have been"
67705>>>        Writeln "// made to any of the tables for which structs and methods are being generated,"
67707>>>        Writeln "// or if new tables are to be added to that list, or tables to be removed from"
67709>>>        Writeln "// it (rare).  Programs using this file should then be recompiled."
67711>>>        Writeln "//"
67713>>>        Writeln "// Mike Peat, Unicorn, 24th August 2006 (mpeat@unicorninterglobal.com)"
67715>>>        Writeln "//"
67717>>>        Writeln "//=============================================================================="
67719>>>        Writeln
67720>>>        Writeln "Register_Procedure Set Field_Changed_Value Integer iField String Value"
67722>>>        Writeln "Register_Function  Field_Current_Value Integer iField Returns String"
67724>>>        Writeln
67725>>>    
67725>>>        Function_Return True
67726>>>    End_Function
67727>>>    
67727>>>    Procedure CloseOutputFile
67730>>>        Integer iChn
67730>>>    
67730>>>        If not (pbFileOpened(Self)) Procedure_Return  // Nothing to do
67733>>>    
67733>>>        Get piChannel to iChn
67734>>>    
67734>>>        Writeln channel iChn ;                "//=============================================================================="
67737>>>        Writeln "// End of file " (psSourceFile(Self))
67740>>>        Writeln "//=============================================================================="
67742>>>    
67742>>>        Close_Output channel iChn
67744>>>        Send SEQ_Release_Channel iChn
67745>>>        Set pbFileOpened to False
67746>>>    End_Procedure
67747>>>    
67747>>>    Procedure GenerateStruct Handle hfFile String sFile
67750>>>        Integer iChn iFlds iFld iType iPts
67750>>>        String  sName sStruct
67750>>>    
67750>>>        Get piChannel to iChn
67751>>>    
67751>>>        // Write the comments
67751>>>        Writeln channel iChn ;                "//=============================================================================="
67754>>>        Writeln "// Struct and methods for table " (ProperCase(Self, sFile))
67757>>>        Writeln
67758>>>        Writeln "Declare_Datafile " sFile
67761>>>        Writeln
67762>>>    
67762>>>        Open hfFile
67764>>>    
67764>>>        Get_Attribute DF_FILE_NUMBER_FIELDS of hfFile to iFlds
67767>>>    
67767>>>        // Write the Struct:
67767>>>        Writeln "#IFDEF _struct_t" sFile
67770>>>        Writeln "#ELSE"
67772>>>        Move ("t" + ProperCase(Self, sFile)) to sStruct
67773>>>        Writeln "   Struct " sStruct
67776>>>        If (Checked_State(oIncRecnum(Self))) Writeln "   Integer Recnum"
67780>>>    
67780>>>        For iFld from 1 to iFlds
67786>>>>
67786>>>            Get_Attribute DF_FIELD_TYPE of hfFile iFld to iType
67789>>>            Get_Attribute DF_FIELD_NAME of hfFile iFld to sName
67792>>>            If ((iType = DF_ASCII) or (iType = DF_TEXT)) Writeln "      String   " sName
67797>>>            If (iType  = DF_DATE)                        Writeln "      Date     " sName
67802>>>            If (iType  = DF_DATETIME)                    Writeln "      DateTime " sName
67807>>>    
67807>>>            If (iType  = DF_BCD) Begin
67809>>>                Get_Attribute DF_FIELD_PRECISION of hfFile iFld to iPts
67812>>>                If (iPts = 0)                            Writeln "      Integer  " sName
67817>>>                Else                                     Writeln "      Number   " sName
67821>>>            End
67821>>>>
67821>>>    
67821>>>        Loop
67822>>>>
67822>>>    
67822>>>        Writeln "   End_Struct  // t" (ProperCase(Self, sFile))
67825>>>        Writeln "#ENDIF"
67827>>>        Writeln
67828>>>    
67828>>>        // Write the buffer-to-struct function:
67828>>>        Writeln "Function " (ProperCase(Self, sFile)) "_BufferToStruct Global Returns " sStruct
67833>>>        Writeln "   " sStruct " tData"
67837>>>        Writeln
67838>>>    
67838>>>        For iFld from 1 to iFlds
67844>>>>
67844>>>            Get_Attribute DF_FIELD_NAME of hfFile iFld to sName
67847>>>            Get_Attribute DF_FIELD_TYPE of hfFile iFld to iType
67850>>>            If not ((iType = DF_BINARY) or (iType = DF_OVERLAP)) ;               Writeln "   Move " sFile "." (Pad(sName, 32)) " to tData." sName
67859>>>        Loop
67860>>>>
67860>>>    
67860>>>        Writeln
67861>>>        Writeln "   Function_Return tData"
67863>>>    
67863>>>        Writeln "End_Function  // " (ProperCase(Self, sFile)) "_BufferToStruct Global"
67867>>>        Writeln
67868>>>    
67868>>>        // Write the struct-to-buffer procedure:
67868>>>        Writeln "Procedure " (ProperCase(Self, sFile)) "_StructToBuffer Global " sStruct " tData"
67874>>>    
67874>>>        For iFld from 1 to iFlds
67880>>>>
67880>>>            Get_Attribute DF_FIELD_NAME of hfFile iFld to sName
67883>>>            Get_Attribute DF_FIELD_TYPE of hfFile iFld to iType
67886>>>            If not ((iType = DF_BINARY) or (iType = DF_OVERLAP)) ;               Writeln "   Move tData." (Pad(sName, 32)) " to " sFile "." sName
67895>>>        Loop
67896>>>>
67896>>>    
67896>>>        Writeln "End_Procedure  // " (ProperCase(Self, sFile)) "_StructToBuffer Global"
67900>>>        Writeln
67901>>>    
67901>>>        // Write the DD-to-struct function:
67901>>>        Writeln "Function " (ProperCase(Self, sFile)) "_DDToStruct Global Handle hoDD Returns " sStruct
67906>>>        Writeln "   " sStruct " tData"
67910>>>        Writeln
67911>>>    
67911>>>        For iFld from 1 to iFlds
67917>>>>
67917>>>            Get_Attribute DF_FIELD_NAME of hfFile iFld to sName
67920>>>            Get_Attribute DF_FIELD_TYPE of hfFile iFld to iType
67923>>>            If not ((iType = DF_BINARY) or (iType = DF_OVERLAP)) ;               Writeln "   Get Field_Current_Value of hoDD FIELD " sFile "." (Pad(sName, 32)) " to tData." sName
67932>>>        Loop
67933>>>>
67933>>>    
67933>>>        Writeln
67934>>>        Writeln "   Function_Return tData"
67936>>>    
67936>>>        Writeln "End_Function  // " (ProperCase(Self, sFile)) "_DDToStruct Global"
67940>>>        Writeln
67941>>>    
67941>>>        // Write the struct-to-DD procedure:
67941>>>        Writeln "Procedure " (ProperCase(Self, sFile)) "_StructToDD Global " sStruct " tData Handle hoDD"
67947>>>    
67947>>>        For iFld from 1 to iFlds
67953>>>>
67953>>>            Get_Attribute DF_FIELD_NAME of hfFile iFld to sName
67956>>>                        Get_Attribute DF_FIELD_TYPE of hfFile iFld to iType
67959>>>            If not ((iType = DF_BINARY) or (iType = DF_OVERLAP)) ;               Writeln "   Set Field_Changed_Value of hoDD FIELD " sFile "." (Pad(sName, 32)) " to tData." sName
67968>>>        Loop
67969>>>>
67969>>>    
67969>>>        Writeln "End_Procedure  // " (ProperCase(Self, sFile)) "_StructToDD Global"
67973>>>        Writeln
67974>>>    
67974>>>    
67974>>>        Close hfFile
67975>>>    End_Procedure
67976>>>    
67976>>>    Procedure GenerateStructs
67979>>>        Integer iItems iCols iRows iRow iItem
67979>>>        String  sFile sPath
67979>>>        Handle  hfFile
67979>>>        Boolean bChkd bOK
67979>>>    
67979>>>        If (YesNo_Box(("WARNING: Running this process will overwrite any existing file:\n" + ;                       "     " + Value(oGenFile(Self)) + "\n\n" + ;                       "Do you wish to continue?"), "Generate Structs") <> MBR_YES) Procedure_Return
67982>>>    
67982>>>        Get OpenOutputFile to bOK
67983>>>    
67983>>>        If not bOK Begin
67985>>>            Error 99002 ("Could not open" * psSourceFile(Self) * "for writing")
67986>>>>
67986>>>            Procedure_Return
67987>>>        End
67987>>>>
67987>>>    
67987>>>        Send Cursor_Wait to (Cursor_Control(Self))
67988>>>        Get Item_Count of oTables to iItems
67989>>>        Get Line_Size  of oTables to iCols
67990>>>        Move (iItems / iCols)     to iRows
67991>>>    
67991>>>        For iRow from 0 to (iRows - 1)
67997>>>>
67997>>>            Move (iRow * iCols) to iItem
67998>>>            Get Select_State of oTables iItem     to bChkd
67999>>>            Get Value of oTables Item (iItem + 1) to hfFile
68000>>>            Get Value of oTables Item (iItem + 3) to sFile
68001>>>    
68001>>>            If bChkd Send GenerateStruct hfFile sFile
68004>>>        Loop
68005>>>>
68005>>>    
68005>>>        Send CloseOutputFile
68006>>>        Send Cursor_Ready to (Cursor_Control(Self))
68007>>>    
68007>>>        Send Info_Box "Structures and Methods Generated" "Generate Structs"
68008>>>        Set Label of oCancel to "&Close"
68009>>>    End_Procedure
68010>>>    
68010>>>    Procedure SelectAll
68013>>>        Integer iItems iCols iRows iRow iItem
68013>>>    
68013>>>        Get Item_Count of oTables to iItems
68014>>>        Get Line_Size  of oTables to iCols
68015>>>        Move (iItems / iCols)     to iRows
68016>>>    
68016>>>        For iRow from 0 to (iRows - 1)
68022>>>>
68022>>>            Move (iRow * iCols) to iItem
68023>>>            Set Select_State of oTables iItem to True
68024>>>        Loop
68025>>>>
68025>>>    
68025>>>    End_Procedure
68026>>>    
68026>>>    Procedure DeselectAll
68029>>>        Integer iItems iCols iRows iRow iItem
68029>>>    
68029>>>        Get Item_Count of oTables to iItems
68030>>>        Get Line_Size  of oTables to iCols
68031>>>        Move (iItems / iCols)     to iRows
68032>>>    
68032>>>        For iRow from 0 to (iRows - 1)
68038>>>>
68038>>>            Move (iRow * iCols) to iItem
68039>>>            Set Select_State of oTables iItem to False
68040>>>        Loop
68041>>>>
68041>>>    
68041>>>    End_Procedure
68042>>>    
68042>>>    Procedure Initalise
68045>>>        String  sPath sArg sWs sErr
68045>>>        Integer iRes
68045>>>        
68045>>>        Move (Argument(phoCommandLine(ghoApplication), 1)) to sArg
68046>>>        
68046>>>        If (sArg <> "") Begin
68048>>>            Get WsFromSws sArg to sWs
68049>>>            Send DoClearPaths of (phoWorkspace(ghoApplication))
68050>>>            Move (OpenWorkspaceFile(phoWorkspace(ghoApplication), sWs)) to iRes
68051>>>            
68051>>>            If (iRes <> wsWorkspaceOpened) Begin
68053>>>                Get OpenWorkspaceErrorMessage of (phoWorkspace(ghoApplication)) iRes to sErr
68054>>>                Send Stop_Box sErr ("Error opening workspace" * sArg)
68055>>>                Abort
68056>>>>
68056>>>            End
68056>>>>
68056>>>
68056>>>        End
68056>>>>
68056>>>        
68056>>>        Get psAppSrcPath of (phoWorkspace(oApplication(Self))) to sPath
68057>>>        Move (sPath + "\" + psSourceFile(Self))               to sPath
68058>>>
68058>>>        Set Label to (psBaseName(Self) * "-" * ;            psWorkspaceName(phoWorkspace(oApplication(Self))))    
68059>>>        Set Value of oGenFile to sPath
68060>>>    
68060>>>        Send ListTables
68061>>>    End_Procedure
68062>>>    
68062>>>    Set Border_Style to Border_Thick
68063>>>    Set Label to "Generate Structs from Table Definitions"
68064>>>    Set Locate_Mode to Center_On_Screen
68065>>>    Set Size to 349 356
68066>>>    Set piMaxSize to 349 356
68067>>>    Set piMinSize to 349 356
68068>>>
68068>>>    Object oGenFile is a Form
68070>>>        Set Label to "File to use/generate:"
68071>>>        Set Size to 13 275
68072>>>        Set Location to 7 78
68073>>>        Set Label_Col_Offset to 72
68074>>>        Set Prompt_Button_Mode to pb_PromptOn
68075>>>
68075>>>        On_Key Key_Enter Send ListTables
68076>>>        On_Key Key_Tab   Send ListTables
68077>>>        
68077>>>        Procedure Prompt
68080>>>            Send ChangeGenFile
68081>>>        End_Procedure
68082>>>
68082>>>    End_Object
68083>>>    
68083>>>    Object oOpenDlg is a OpenDialog
68085>>>        Set HideReadOnly_State to True
68086>>>    End_Object
68087>>>
68087>>>    Object oExplanation is a Textbox
68089>>>        Set Label to "Tick the tables you want to generate structs and methods for in the grid below."
68090>>>        Set Location to 44 6
68091>>>        Set Size to 9 247
68092>>>        Set Justification_Mode to jMode_Left
68093>>>        Set Focus_Mode to NonFocusable
68094>>>    End_Object
68095>>>
68095>>>    Object oExplanation2 is a Textbox
68097>>>        Set Label to "You can change the name and location of the used/generated"
68098>>>        Set Location to 25 6
68099>>>        Set Size to 9 279
68100>>>        Set Justification_Mode to jMode_Left
68101>>>        Set Focus_Mode to NonFocusable
68102>>>    End_Object
68103>>>
68103>>>    Object oExplanation3 is a Textbox
68105>>>        Set Label to "source file in the form above."
68106>>>        Set Location to 33 6
68107>>>        Set Size to 9 279
68108>>>        Set Justification_Mode to jMode_Left
68109>>>        Set Focus_Mode to NonFocusable
68110>>>    End_Object
68111>>>
68111>>>    Object oTables is a Grid
WARNING: 4537 Obsolete class: GRID ON LINE: 582 (68111) OF FILE: C:\Projects\StructsFromTables-19\AppSrc\StructFromTable.dg
68113>>>        Set Size to 267 349
68114>>>        Set Location to 62 4
68115>>>
68115>>>        Set Line_Width to 5 0
68116>>>
68116>>>        Set Form_Width    Item 0 to 13
68117>>>        Set Header_Label  Item 0 to ""
68118>>>        
68118>>>        Set Form_Width    Item 1 to 19
68119>>>        Set Header_Label  Item 1 to "No"
68120>>>        
68120>>>        Set Form_Width    Item 2 to 163
68121>>>        Set Header_Label  Item 2 to "Description"
68122>>>        
68122>>>        Set Form_Width    Item 3 to 51
68123>>>        Set Header_Label  Item 3 to "Table Name"
68124>>>        
68124>>>        Set Form_Width    Item 4 to 98
68125>>>        Set Header_Label  Item 4 to "File Name"
68126>>>        
68126>>>        Set Select_Mode to Multi_Select
68127>>>        
68127>>>        Procedure AddTableRow Boolean bExist Integer iFile String sDesc String sTable String sFile
68130>>>            Send Add_Item msg_None ""
68131>>>            Set Checkbox_Item_State (Item_Count(Self) - 1) to True
68132>>>            If bExist Set Select_State Item (Item_Count(Self) - 1) to True
68135>>>            Send Add_Item msg_None iFile
68136>>>            Set Entry_State (Item_Count (Self) - 1) to False
68137>>>            Send Add_Item msg_None sDesc
68138>>>            Set Entry_State (Item_Count (Self) - 1) to False
68139>>>            Send Add_Item msg_None sTable
68140>>>            Set Entry_State (Item_Count (Self) - 1) to False
68141>>>            Send Add_Item msg_None sFile
68142>>>            Set Entry_State (Item_Count (Self) - 1) to False
68143>>>        End_Procedure
68144>>>        
68144>>>    End_Object
68145>>>
68145>>>    Object oSelectAll is a Button
68147>>>        Set Label to "&Select ALL"
68148>>>        Set Location to 334 126
68149>>>
68149>>>        Procedure OnClick
68152>>>           Send SelectAll
68153>>>        End_Procedure
68154>>>        
68154>>>    End_Object
68155>>>
68155>>>    Object oDeselectAll is a Button
68157>>>        Set Label to "Deselect ALL"
68158>>>        Set Location to 334 180
68159>>>
68159>>>        Procedure OnClick
68162>>>            Send DeselectAll
68163>>>        End_Procedure
68164>>>        
68164>>>    End_Object
68165>>>
68165>>>    Object oGenerate is a Button
68167>>>        Set Label to "Generate"
68168>>>        Set Location to 334 251
68169>>>        Set peAnchors to anBottomRight
68170>>>        
68170>>>        Procedure OnClick
68173>>>            Send GenerateStructs
68174>>>        End_Procedure
68175>>>        
68175>>>    End_Object
68176>>>
68176>>>    Object oCancel is a Button
68178>>>        Set Label to "Close"
68179>>>        Set Location to 334 304
68180>>>        Set peAnchors to anBottomRight
68181>>>
68181>>>        Procedure OnClick
68184>>>           Send Close_Panel
68185>>>        End_Procedure
68186>>>
68186>>>    End_Object
68187>>>
68187>>>    Object oChangeWS is a Button
68189>>>        Set Size to 14 80
68190>>>        Set Location to 25 273
68191>>>        Set Label to "Change Workspace"
68192>>>
68192>>>        Procedure OnClick
68195>>>            Send ChangeWorkspace
68196>>>        End_Procedure
68197>>>
68197>>>    End_Object
68198>>>
68198>>>    Object oChangeFL is a Button
68200>>>        Set Size to 14 80
68201>>>        Set Location to 43 273
68202>>>        Set Label to "Change Filelist"
68203>>>
68203>>>        Procedure OnClick
68206>>>            Send ChangeFilelist
68207>>>        End_Procedure
68208>>>
68208>>>    End_Object
68209>>>
68209>>>    Object oIncRecnum is a CheckBox
68211>>>       Set Size to 14 50
68212>>>       Set Location to 336 13
68213>>>       Set Label to "Include Recnum"
68214>>>    End_Object
68215>>>
68215>>>End_Object
68216>>>
68216>
68216>Send Initalise of (oStructFromTab(Desktop))
68217>Start_UI          (oStructFromTab(Desktop))
68219>
Summary
Memory Available: 2147483646
Total Warnings : 8
Total Errors   : 0
Total Symbols  : 39811
Total Resources: 0
Total Commands : 68218
Total Windows  : 0
Total Pages    : 0
Static Data    : 380653
Message area   : 480175
Total Blocks   : 24536
